<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<!-- 设置组件扫描的基础包 -->
	<context:component-scan base-package="com.xms">	  
		 <!--  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>	
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/> -->
	</context:component-scan>	
	 
	
	<!-- 对静态资源访问处理方式一：由DefaultServletHttpRequestHandler处理而不是DispatcherServlet， 若配置了拦截器则静态资源还会被拦截器拦截，需要另外处理-->
	  <!-- <mvc:default-servlet-handler/>  --> 
	
	<!-- 对静态资源访问处理方式二：将mapping映射到ResourceHttpRequestHandler处理，匹配静态资源 ，若配置了拦截器则静态资源还会被拦截器拦截，需要另外处理 -->
	<!-- <mvc:resources mapping="/css/**" location="/css/" /> 
		<mvc:resources mapping="/images/**" location="/images/" /> 
			<mvc:resources mapping="/js/**" location="/js/" /> 
				<mvc:resources mapping="/video/**" location="/video/" />  -->
				
	
	<!-- 开启注解 -->
	<mvc:annotation-driven />
	
	<!-- 配置视图解析器 -->
	<bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
          <property name="prefix" value="/WEB-INF/views/" />
          <property name="suffix" value=".jsp" />
     </bean>
    
     <!-- 文件上传 -->
     <!--  方式一： 通过StandardServletMutipartResolver解析mutipart 请求,配置multipartResolver的bean,需要配置web.xml的<multipart-config> -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
     
    <!--  方式二：通过CommonMutipartResolver 解析mutipart 请求  maxUploadSize 文件最大上传大小，maxInMemorySize文件写入内存大小-->
    <!--  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		   	<property name="maxUploadSize" value="10000000" />
		    <property name="maxInMemorySize" value="10000000" />       
	</bean> -->
	
	<!-- 拦截器 -->
	<!--  <mvc:interceptors>	
		是否登录
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login/*"/>
			<mvc:exclude-mapping path="/registe/*"/>
			<mvc:exclude-mapping path="/main/toIndex"/>
			<mvc:exclude-mapping path="/main/toIndexJson"/>
			<mvc:exclude-mapping path="/product/**"/>
		   <mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/video/**"/> 					
			<bean class="com.xms.interceptor.LoginInterceptor"/>
		</mvc:interceptor>		
	</mvc:interceptors>	  -->
	
</beans>

